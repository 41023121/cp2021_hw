var tipuesearch = {"pages": [{'title': 'About', 'text': '這是計算機程式課程 2021 Fall 的作業倉儲與網站 template \n \n 你的學號 \n 網站倉儲: https://github.com/41023121/cp2021_hw \xa0 \n 網站連結:\xa0 https://41023121.github.io/cp2021_hw \xa0 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'HW1', 'text': 'HW1 - 網際動畫與 touch typing 佔學期成績 20%. \n HW1 必須在 2021.10.20 22:00 之前完成 . \n HW1 具體項目成果回報區 將於 2021.09.23 開啟, 於  2021.10.20 22:00 關閉 \n \n 請至  https://github.com  申請 Github 帳號後, 至  https://mde.tw/cp2021/content/Task1.html \xa0 頁面, 將左右碰撞移動的紅色方塊, 改為先移動到水平畫面中心點位置後, 接著上下碰撞移動. \n 請將 1. 的程式碼存入個人 Gist 區 ( 說明 ). \n 請在 1. 的程式中, 加入與  Cango 頁面  Fourbar 程式碼相同功能的啟動按鈕, 讓使用者可以利用按鈕啟動或中斷紅色方塊上下碰撞移動. 完成後請將程式碼存入個人 Gist 區. \n 請在 Gist 檔案編輯區, 利用鍵盤輸入  https://docs.github.com/en/github/writing-on-github/editing-and-sharing-content-with-gists/creating-gists#about-gists  中的這段英文內容, 請利用手機計時, 大概需要多少時間? 請將此段練習打字的內容與所需時間存入 Gist 檔案中. \n 請至少練習 key in 這段英文內容三次, 然後看看是否已經了解如何透過電腦鍵盤 touch typing? \n 接下來請利用中文輸入  https://ithelp.ithome.com.tw/articles/10206233  的第一段中文說明, 請利用手機計時, 大概需要多少時間? \n \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'run', 'text': ' 導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  印出版次與關鍵字程式  \n \n \n \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  Filename:  .py    存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n # 從 browser 導入 document 並設為 doc from browser import document as doc # 使用者可以透過 window 當作介面使用其他 Javascript 功能 from browser import html, window # 用於定時執行特定函式 import browser.timer # 導入數學模組 import math # 導入亂數模組 from random import random, randint def update_score(new_score): global high_score score_doc.innerHTML = "Score: " + str(new_score) if new_score > high_score: high_score_doc.innerHTML = "High Score: " + str(new_score) high_score = new_score def eat(px, py, ax, ay): global xv, yv, pre_pause, paused # (px, py) go to (ax, ay) through incremented xv, yv if ax != px or ay != py: if ax > px and not paused: xv = 1 yv = 0 if ax < px and not paused: xv = -1 yv = 0 if ay > py and not paused: xv = 0 yv = 1 if ay < py and not paused: xv = 0 yv = -1 def game(): global px, py, tc, gs, ax, ay, trail, tail, score # px 為 snake 第一個點的 x 座標, 增量值為 xv px += xv py += yv # 允許穿越四面牆, 以 tc 表示牆面座標極限 # 若 px 為負值則設定為 tc -1, 表示 tc 為 x 方向 limit # x 座標方向的穿牆設定 if px < 0: px = tc-1 if px > tc-1: px = 0 # y 座標方向的穿牆設定 if py < 0: py = tc-1 if py > tc-1: py = 0 ctx.fillStyle = "black" # 畫布填入黑色 ctx.fillRect(0, 0, canvas.width, canvas.height) # snake 為 lime 色 ctx.fillStyle = "lime" # trail 為數列, 代表 snake 各節 [x,y] 座標 # trail = [[x0,y0], [x1, y1], [x2, y2]...] # gs 為方塊邊長 pixel 數 for i in range(len(trail)): # https://developer.mozilla.org/zh-TW/docs/Web/API/Canvas_API/Tutorial/Drawing_shapes # fillRect(x, y, width, height) ctx.fillRect(trail[i][0]*gs, trail[i][1]*gs, gs-2, gs-2) # 若 snake 第一節座標 (px, py) 穿過身體任一節, 則 score 歸零 if trail[i][0] == px and trail[i][1] == py: score = score if paused else 0 # snake reset 為五節 tail = 5 # trail 數列以碰到的 [px, py] 座標數列插入作為第一節 trail.insert(0, [px, py]) while len(trail) > tail: # pop() 內建移除數列最後一個 element trail.pop() # ax, ay 為紅點座標 # 當 snake 第一節座標[px, py] 與紅色食物座標 [ax, ay] 重合 # 則 tail 增量, 即多一節且得分加 1, 然後食物座標 [ax, ay] 重新以亂數定位 if ax == px and ay == py: tail += 1 ax = math.floor(random()*tc) ay = math.floor(random()*tc) score += 1 # [ax, ay] is known here # [px, py] is where the head of the snake # xv needed to be incremented from px to ax first # and yv needed to be incremented from py to ay eat(px, py, ax, ay) # 更新計分顯示 update_score(score) ctx.fillStyle = "red" ctx.fillRect(ax*gs, ay*gs, gs-2, gs-2) def key_push(evt): global xv, yv, pre_pause, paused key = evt.keyCode # 37 is left arrow key # 74 is j key if key == 74 and not paused: xv = -1 yv = 0 # 38 is up arrow key # 73 is i key elif key == 73 and not paused: xv = 0 yv = -1 # 39 is right arrow key # 76 is l key elif key == 76 and not paused: xv = 1 yv = 0 # 40 is down arrow key # 77 is m key elif key == 77 and not paused: xv = 0 yv = 1 # 32 is pause key # 80 is p key elif key == 80: temp = [xv, yv] xv = pre_pause[0] yv = pre_pause[1] pre_pause = [*temp] paused = not paused def show_instructions(evt): window.alert("keys to control: i=up, m=down, j=left, l=right, p=pause") # 利用 html 建立 canvas 超文件物件 canvas = html.CANVAS(width = 600, height = 600) canvas.id = "game-board" brython_div = doc["brython_div"] brython_div <= canvas score_doc = html.DIV("score") score_doc.id = "score" brython_div <= score_doc high_score_doc = html.DIV("high-score") high_score_doc.id = "high-score" brython_div <= high_score_doc button = html.BUTTON("Keys to control") button.id = "instructions-btn" brython_div <= button score = 0 high_score = 0 px = py = 10 # gs*tc = canvas width and height gs = 20 tc = 30 ax = ay = 15 xv = yv = 0 trail = [] tail = 5 pre_pause = [0,0] paused = False ctx = canvas.getContext("2d") doc.addEventListener("keydown", key_push) instructions_btn = doc["instructions-btn"] instructions_btn.addEventListener("click", show_instructions) browser.timer.set_interval(game, 1000/15)', 'tags': '', 'url': 'run.html'}, {'title': 'HW2', 'text': 'HW2 - 可攜程式系統與個人網站佔學期成績 20%. \n HW2 必須在 2021.11.03 22:00 之前完成. \n HW2 具體項目成果回報區 將於 2021.10.25 開啟, 於  2021.11.03 22:00 關閉 \n 可攜程式系統與 Python 範例程式收集整理 \n 1. 請準備一個至少 64 GB 大小的 USB 3.0 以上隨身碟 (或外接 SSD), 根據  Task2  中的說明, 建立自己的可攜程式系統.\xa0 \n 2. 請登入 Github 帳號後, 連線至  https://github.com/mdecourse/cp2021_hw  後, 透過  Use this template  按鈕建立自己的 cp2021_hw 倉儲. 並至該倉儲的 Settings -> Pages -> Source 將 main 分支設為 Github Pages 的 root (也就是選擇將倉儲的 main 分支設為對應網站的根目錄). \n 3. 請將 HW1 與 HW2 的作業內容登錄至個人的 cp2021_hw 倉儲與網站中. (學習如何透過 git 指令修改倉儲中的版本內容) \n 4. 請在個人作業網站的 HW2 區域下增設一個 H2 頁面, 將該網頁標題命名為 run, 可以如  run  頁面中的內容, 並且利用此頁面收集 Python 範例程式. (例如: 可自動執行的貪食蛇:  https://mde.tw/cp2021/content/run.html?src=https://gist.githubusercontent.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439/raw/2160a12b9fec9707a120a383ed5d38b9b78a02cf/snake.py  將  https://gist.github.com/mdecourse/d306a1f57e53bfd6466eaae20bcb9439  作為  https://mde.tw/cp2021/content/run.html  頁面中 src 變數的值, 就可以在頁面中導入程式碼並執行) \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': '\n HW3 - AI 貪食蛇佔學期成績 30%. \n HW3 必須在 2021.12.22 22:00 之前完成. \n HW3 具體項目成果回報區 將於 2021.11.09 開啟, 於  2021.12.22 22:00 關閉 \n 網際貪食蛇的逆襲, 誰的 自動執行貪食蛇 能夠破紀錄? 目前直覺貪食蛇紀錄為 45 節 (除了蛇身節數外, 應該還要置入出現紅色標的物後的總完食時間). \n 手動執行貪食蛇 程式說明與整理. \n 自動執行貪食蛇 程式說明與整理. \n 自動執行貪食蛇 程式的改進. \n 參考資料: \n https://mde.tw/cp2021/content/Task3.html \n Brython snake 原始來源:  https://medium.com/swlh/sick-of-javascript-just-use-browser-python-4b9679efe08b \n https://github.com/mdecourse/snake-Q-Learning \n https://towardsdatascience.com/teaching-a-computer-how-to-play-snake-with-q-learning-93d0a316ddc0 \n https://github.com/mdecourse/SnakeQlearning \n https://medium.com/@italohdc/learnsnake-teaching-an-ai-to-play-snake-using-reinforcement-learning-q-learning-b63ac23dfdd1 \n https://towardsdatascience.com/snake-played-by-a-deep-reinforcement-learning-agent-53f2c4331d36 \n https://www.geeksforgeeks.org/ai-driven-snake-game-using-deep-q-learning/ \n https://www3.hs-albsig.de/wordpress/point2pointmotion/2020/10/09/deep-reinforcement-learning-with-the-snake-game/ \n 2016_Exploration of Reinforcement Learning to SNAKE.pdf \n train_a_snake_with_reinforceme.pdf \n https://medium.com/@hugo.sjoberg88/using-reinforcement-learning-and-q-learning-to-play-snake-28423dd49e9b \n https://github.com/mdecourse/Snake-Reinforcement-Learning \n Autonomous-Agents-in-Snake-Game-via-Deep-Reinforcement-Learning.pdf \n 延伸應用: \n \n \n \n \n https://github.com/mdecourse/snake-ai-pytorch \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Final Project', 'text': 'Final Project 佔學期成績 30% \n Final Project 必須在 2022.01.05 22:00 之前完成 . \n Final Project 具體項目成果回報區 將於 2021.11.09 開啟, 於  2022.01.05 22:00 關閉 \n 利用 Brython 寫一個會 令人想玩 的網際遊戲. \n 參考章節: \n \n 專題摘要 \n 資料蒐集 \n 設計動機 \n 設計方法 \n 結果與討論 \n 附錄 \n \n 參考資料: \n https://github.com/collections/web-games \n https://github.com/topics/web-game \n https://github.com/topics/browser-game \n https://github.com/leereilly/games \n https://bmsleight.github.io/brython-blocks/ \n https://github.com/mdecourse/brython-blocks', 'tags': '', 'url': 'Final Project.html'}]};